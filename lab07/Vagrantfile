# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']

MACHINES = {
  :otuslinux => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	:disks => {
		:sata1 => {
			:dfile => home + '/Downloads/sata1.vdi',
			:size => 250,
			:port => 1
		}
	}
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          #box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "1024"]
                  needsController = false
		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

		  end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
 	  box.vm.provision "shell", inline: <<-SHELL
	        mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
          # Install required SW
          yum install -y redhat-lsb-core wget rpmdevtools rpm-build createrepo yum-utils gcc
          # Download SRPM package of NGINX
          cd /root
          wget https://nginx.org/packages/centos/7/SRPMS/nginx-1.14.1-1.el7_4.ngx.src.rpm
          # Install the package to home directory
          rpm -i nginx-1.14.1-1.el7_4.ngx.src.rpm
          # Download latest OpenSSL library source
          wget https://www.openssl.org/source/latest.tar.gz
          # Unarchive it
          tar -zxf latest.tar.gz
          # Install dependency packages
          yum-builddep -y /root/rpmbuild/SPECS/nginx.spec
          # Change SPEC file to support OpenSSL
          cp /vagrant/root/rpmbuild/SPECS/nginx.spec /root/rpmbuild/SPECS/nginx.spec
          # Compile source and create RPM package
          rpmbuild --quiet -bb /root/rpmbuild/SPECS/nginx.spec
          # Intsall the RPM package
          yum localinstall -y /root/rpmbuild/RPMS/x86_64/nginx-1.14.1-1.el7_4.ngx.x86_64.rpm
          systemctl start nginx
          # Create directory for repository
          mkdir /usr/share/nginx/html/repo
          # Copy the RPM package to the directory
          cp /root/rpmbuild/RPMS/x86_64/nginx-1.14.1-1.el7_4.ngx.x86_64.rpm  /usr/share/nginx/html/repo/
          # Download some package to the directory
          wget http://www.percona.com/downloads/percona-release/redhat/0.1-6/percona-release-0.1-6.noarch.rpm -O /usr/share/nginx/html/repo/percona-release-0.1-6.noarch.rpm
          # Create repository
          createrepo /usr/share/nginx/html/repo/
          # Change configuration of NXHINX to support autoindex
          cp /vagrant/etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf
          nginx -s reload
          # Add new repository to YUM
          cp /vagrant/etc/yum.repos.d/otus.repo /etc/yum.repos.d/otus.repo
          # Install some package form the new repository
          yum install percona-release -y

  	  SHELL

      end
  end
end

