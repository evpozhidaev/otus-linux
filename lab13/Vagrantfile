# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :monitoring => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.150'
  }
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "1000"]
          end
          
          box.vm.provision "shell", inline: <<-SHELL
            mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
            sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
            systemctl restart sshd
            # enable EPEL
            yum install epel-release -y
            # install basic packages
            yum install -y bash-completion bash-completion-extras vim-enhanced
            # install specific packages
            yum install -y wget initscripts urw-fonts fontconfig freetype*
            # install node exporter
            useradd --no-create-home --shell /bin/false node_exporter
            wget -qc https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz
            tar -xzf node_exporter-0.18.1.linux-amd64.tar.gz
            cp node_exporter-0.18.1.linux-amd64/node_exporter /usr/local/bin/
            cp /vagrant/etc/systemd/system/node_exporter.service /etc/systemd/system/
            systemctl daemon-reload
            systemctl enable --now node_exporter
            # install prometheus
            useradd --no-create-home --shell /bin/false prometheus
            wget -qc https://github.com/prometheus/prometheus/releases/download/v2.14.0/prometheus-2.14.0.linux-amd64.tar.gz
            tar -xzf prometheus-2.14.0.linux-amd64.tar.gz
            cp prometheus-2.14.0.linux-amd64/prometheus /usr/local/bin/
            cp prometheus-2.14.0.linux-amd64/promtool /usr/local/bin/
            mkdir /etc/prometheus
            cp -r prometheus-2.14.0.linux-amd64/consoles/ /etc/prometheus/consoles
            cp -r prometheus-2.14.0.linux-amd64/console_libraries/ /etc/prometheus/console_libraries
            cp /vagrant/etc/prometheus/prometheus.yml /etc/prometheus/
            chown -R prometheus:prometheus /etc/prometheus
            mkdir /var/lib/prometheus
            chown prometheus:prometheus /var/lib/prometheus
            cp /vagrant/etc/systemd/system/prometheus.service /etc/systemd/system/
            systemctl daemon-reload
            systemctl enable --now prometheus
            # install grafana
            cp /vagrant/etc/yum.repos.d/grafana.repo /etc/yum.repos.d/
            yum install grafana -y 
            systemctl daemon-reload
            systemctl enable --now grafana-server

            # install LAMP + Zabbix
            # yum install httpd -y
            # systemctl enable --now httpd
            # sudo yum install mariadb-server mariadb
            # systemctl enable --now mariadb
            # mysql_secure_installation
            # yum install php php-mysql -y
            # systemctl restart httpd
            # vi /var/www/html/info.php
            # sudo rm /var/www/html/info.php
            # rpm -Uvh https://repo.zabbix.com/zabbix/4.4/rhel/7/x86_64/zabbix-release-4.4-1.el7.noarch.rpm
            # yum clean all
            # yum repolist
            # yum install zabbix-server-mysql zabbix-web-mysql -y
            # yum install zabbix-agent
            # mysql -uroot -p
            # MariaDB [(none)]> create database zabbix character set utf8 collate utf8_bin;
            # MariaDB [(none)]> grant all privileges on zabbix.* to zabbix@localhost identified by '1qaz@WSX';
            # MariaDB [(none)]> flush privileges;
            # MariaDB [(none)]> quit;
            # zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix
            # vi /etc/zabbix/zabbix_server.conf
            # sudo vi /etc/httpd/conf.d/zabbix.conf
            # systemctl restart httpd
            # getenforce
            # setenforce 0
            # getenforce
            # systemctl enable --now zabbix-server.service
            # systemctl enable --now zabbix-agent.service
            # systemctl status zabbix-agent.service
            # systemctl status zabbix-server.service
            # vi /etc/zabbix/zabbix_agentd.conf
            # ll /etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf
                    
          SHELL

          config.vm.provision "ansible" do |ansible|
            ansible.compatibility_mode = "2.0"
            ansible.playbook = "playbooks/grafana.yml"
            ansible.verbose = "true"
            ansible.become = "true"
          end
      end
  end
end
