# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']

MACHINES = {
  :otuslinux => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	:disks => {
		:sata1 => {
			:dfile => home + '/Downloads/sata1.vdi',
			:size => 250,
			:port => 1
		}
	}
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          #box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "1024"]
                  needsController = false
		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

		  end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
              # log monitoring
              cp -v /vagrant/etc/sysconfig/watchdog /etc/sysconfig/
              cp -v /vagrant/var/log/watchlog.log /var/log/
              cp -v /vagrant/opt/watchlog.sh /opt/
              chmod 755 /opt/watchlog.sh
              cp -v /vagrant/etc/systemd/system/watchlog.* /etc/systemd/system/
              systemctl daemon-reload
              systemctl start watchlog.timer
              systemctl start watchlog.service
              # install packges
              yum install epel-release -y 
              yum install spawn-fcgi php php-cli -y
              # systemd unit for spawn-fcgi
              echo 'OPTIONS="-u apache -g apache -s $SOCKET -S -M 0600 -C 32 -F 1 -- /usr/bin/php-cgi"' | cat >> /etc/sysconfig/spawn-fcgi
              cp -v /vagrant/etc/systemd/system/spawn-fcgi.service /etc/systemd/system/
              systemctl start spawn-fcgi
              # two separate instances of httpd
              cp -v /vagrant/etc/systemd/system/httpd@.service /etc/systemd/system/
              cp -v /vagrant/etc/sysconfig/httpd-first /etc/sysconfig/
              cp -v /vagrant/etc/sysconfig/httpd-second /etc/sysconfig/
              cp -v /vagrant/etc/httpd/conf/first.conf /etc/httpd/conf/
              cp -v /vagrant/etc/httpd/conf/second.conf /etc/httpd/conf/
              systemctl start httpd@first.service
              systemctl start httpd@second.service
              # wait 1 minutes before checks
              echo --== sleep for 1 minute ==--
              sleep 1m
              # collect reports
              echo ----- log monitoring ---------------------- > /root/report.txt 
              grep Master /var/log/messages >> /root/report.txt 
              echo ----- systemd unit for spawn-fcgi --------- >> /root/report.txt 
              systemctl status spawn-fcgi | grep Active >> /root/report.txt
              echo ----- two separate instances of httpd ----- >> /root/report.txt 
              ss -tlupn | grep httpd >> /root/report.txt
              echo --== show report ==--
              cat /root/report.txt

  	  SHELL

      end
  end
end

